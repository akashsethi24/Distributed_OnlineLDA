Support Vector Machines Applied to Face 
Recognition 
P. Jonathon Phillips 
National Institute of Standards and Technology 
Bldg 225 / Rm A216 
Gaithersburg, MD 20899 
Tel 301.975.5348; Fax 301.975.5287 
jonathon@nist.gov 
Abstract 
Face recognition is a K class problem, where K is the number of known 
individuals; and support vector machines (SVMs) are a binary classi- 
fication method. By reformulating the face recognition problem and re- 
interpreting the output of the SVM classifier, we developed a SVM-based 
face recognition algorithm. The face recognition problem is formulated 
as a problem in difference space, which models dissimilarities between 
two facial images. In difference space we formulate face recognition as a 
two class problem. The classes are: dissimilarities between faces of the 
same person, and dissimilarities between faces of different people. By 
modifying the interpretation of the decision surface generated by SVM, 
we generated a similarity metric between faces that is learned from ex- 
amples of differences between faces. The SVM-based algorithm is com- 
pared with a principal component analysis (PCA) based algorithm on a 
difficult set of images from the FERET database. Performance was mea- 
sured for both verification and identification scenarios. The identification 
performance for SVM is 77-78% versus 54% for PCA. For verification, 
the equal error rate is 7% for SVM and 13% for PCA. 
1 Introduction 
Face recognition has developed into a major research area in pattern recognition and com- 
puter vision. Face recognition is different from classical pattern-recognition problems such 
as character recognition. In classical pattern recognition, there are relatively few classes, 
and many samples per class. With many samples per class, algorithms can classify samples 
not previously seen by interpolating among the training samples. On the other hand, in 
804 R if. Phillips 
face recognition, there are many individuals (classes), and only a few images (samples) per 
person, and algorithms must recoize faces by extrapolating from the training samples. 
In numerous applications there can be only one training sample (image) of each person. 
Support vector machines (SVMs) are formulated to solve a classical two class pattern 
recognition problem. We adapt SVM to face recoifion by modifying the interpretation 
of the output of a SVM classifier and devising a representation of facial images that is 
concordant with a two class problem. Traditional SVM returns a binary value, the class of 
the object. To train our SVM algorithm, we formulate the problem in a difference space, 
which explicitly captures the dissimilarities between two facial images. This is a departure 
from traditional face space or view-based approaches, which encodes each facial image as 
a separate view of a face. 
In difference space, we are interested in the following two classes: the dissimilarities be- 
tween images of the same individual, and dissimilarities between images of different peo- 
ple. These two classes are the input to a SVM algorithm, A SVM algorithm generates a 
decision surface separating the two classes. For face recognition, we re-interpret the deci- 
sion surface to produce a similarity metric between two facial images. This allows us to 
construct face-recognition algorithms. The work of Moghaddam et al. [3] uses a Bayesian 
method in a difference space, but they do not derive a similarity distance from both positive 
and negative samples. 
We demonstrate our SVM-based algorithm on both verification and identification applica- 
tions. In identification, the algorithm is presented with an image of an unknown person. 
The algorithm reports its best estimate of the identity of an unknown person from a database 
of known individuals. In a more general response, the algorithm will report a list of the most 
similar individuals in the database. In verification (also referred to as authentication), the 
algorithm is presented with an image and a claimed identity of the person. The algorithm 
either accepts or rejects the claim, Or, the algorithm can return a confidence measure of the 
validity of the claim. 
To provide a benchmark for comparison, we compared our algorithm with a principal com- 
ponent analysis (PCA) based algorithm. We report results on images from the FERET 
database of images, which is the de facto standard in the face recognition community. From 
our experience with the FERET database, we selected harder sets of images on which to 
test the algorithms. Thus, we avoided saturating performance of either algorithm and pro- 
viding a robust comparison between the algorithmq. To test the ability of our algorithm to 
generalize to new faces, we trained and tested the algorithms on separate sets of faces. 
2 Background 
In this section we will give a brief overview of SVM to present the notation used in this 
paper. For details of SVM see Vapnik [7], or for a tutorial see Burges [1]. SVM is a binary 
classification method that finds the optimal linear decision surface based on the concept of 
structural risk minimization. The decision surface is a weighted combination of elements 
of the training set. These elements are called support vectors and characterize the boundary 
between the two classes. The input to a SVM algorithm is a set { (xl, /i) } of labeled training 
data, where xl is the data and /i = - 1 or 1 is the label. The output of a SVM algorithm is 
a set of Ns support vectors si, coefficient weights ai, class labels /i of the support vectors, 
and a constant term b. The linear decision surface is 
where 
w-z+b=0, 
Ns 
W -- E Oi]iSi' 
i=1 
Support Vector Machines Applied to Face Recognition 805 
SVM can be extended to nonlinear decision surfaces by using a kernel K(., .) that satisfies 
Mercer's condition [1, 7]. The nonlinear decision surface is 
E aiyiK(si,z) + b - O. 
i=1 
A facial image is represented as a vector p E N, where Rv is referred to as face space. 
Face space can be the original pixel values vectorized or another feature space; for example, 
projecting the facial image on the eigenvectors generated by performing PCA on a training 
set of faces [6] (also referred to as eigenfaces). 
We write pz 0-, P2 if pz and P2 are images of the same face, and pz  P2 if they are 
images of different faces. To avoid confusion we adopted the following terminology for 
identification and verification. The gallery is the set of images of known people and a 
probe is an unknown face that is presented to the system. In identification, the face in 
a probe is identified. In verification, a probe is the facial image presented to the system 
whose identity is to be verified. The set of unknown faces is call the probe set. 
3 Verification as a two class problem 
Verification is fundamentally a two class problem. A verification algorithm is presented 
with an image p and a claimed identity. Either the algorithm accepts or rejects the claim. 
A straightforward method for constructing a classifier for person X, is to feed a SVM al- 
gorithm a training set with one class consisting of facial images of person X and the other 
class consisting of facial images of other people. A SVM algorithm will generated a linear 
decision surface, and the identity of the face in image p is accepted if 
w.p+b_<0, 
otherwise the claim is rejected. 
This classifier is designed to minimizes the structural risk. Structural risk is an overall 
measure of classifier performance. However, verification performance is usually measured 
by two statistics, the probability of correct verification, Pv, and the probability of false 
acceptance, PF. There is a tradeoff between Pv and PF. At one extreme all claims are 
rejected and Pv = PF = O; and at the other extreme, all claims are accepted and Pv = 
PF = 1. The operating values for Pv and PF are dictated by the application. 
Unfortunately, the decision surface generated by a SVM algorithm produces a single per- 
formance point for Pv and P.. To allow for adjusting Pv and PF, we parameterize a SVM 
decision surface by A. The parametrized decision surface is 
w.z+b=A, 
and the identity of the face image p is accepted d 
w-p+b_<A. 
If A = -oc, then all claims are rejected and Pv = PF = 0; if A = +c, all claims 
are accepted and Pv = P = 0. By varying A between negative and positive ifinity, all 
possible combinations of Pv and P are found. 
Nonlinear parametrized decision surfaces are described by 
Ns. 
E ciYiK(si,z) + b - A. 
i=1 
806 P. J. Phillips 
4 Representation 
In a canonical face recognition algorithm, each individual is a class and the distribution of 
each face is estimated or approximated. In this method, for a gallery of K individuals, the 
identification problem is a K class problem, and the verification problem is K instances 
of a two class problems. To reduce face recognition to a single instance of a two class 
problem, we introduce a new representation. We model the dissimilarities between faces. 
Let T = {t,..., t4} be a training set of faces of K individuals, with multiple images of 
each of the K individuals. From T, we generate two classes. The first is the within-class 
differences set, which are the dissimilarities in facial images of the same person. Formally 
the within-class difference set is 
The set C contains within-class differences for all K individuals in T, not dissimilarities 
for one of the K individuals in the training set. The second is the between-class differences 
set, which are the dissimilarities among images of different individuals in the training set. 
Formally, 
6'2 -- {ti- tjlti  tj}. 
Classes 6' and 6'2 are the inputs to our SVM algorithm, which generams a decision sur- 
face. In the pure SVM paradigm, given the difference between facial images px and 
p2, the classifier estimates ff the faces in the two images are from the same person. In 
the modification described in section 3, the classification return
