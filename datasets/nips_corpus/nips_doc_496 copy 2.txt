Neural Network Routing for Random Multistage 
Interconnection Networks 
Mark W. Goudreau 
Princeton University 
and 
NEC Research Institute, Inc. 
4 Independence Way 
Princeton, NJ 08540 
C. Lee Giles 
NEC Research Institute, Inc. 
4 Independence Way 
Princeton, NJ 08540 
Abstract 
A routing scheme that uses a neural network has been developed that can 
aid in establishing point-to-point communication routes through multi- 
stage interconnection networks (MINs). The neural network is a network 
of the type that was examined by Hopfield (Hopfield, 1984 and 1985). 
In this work, the problem of establishing routes through random MINs 
(RMINs) in a shared-memory, distributed computing system is addressed. 
The performance of the neural network routing scheme is compared to two 
more traditional approaches - exhaustive search routing and greedy rout- 
ing. The results suggest that a neural network router may be competitive 
for certain RMINs. 
I INTRODUCTION 
A neural network has been developed that can aid in establishing point-to- 
point communication routes through multistage interconnection networks (MINs) 
(Goudreau and Giles, 1991). Such interconnection networks have been widely stud- 
ied (Huang, 1984; Siegel, 1990). The routing problem is of great interest due to 
its broad applicability. Although the neural network routing scheme can accommo- 
date many types of communication systems, this work concentrates on its use in a 
shared-memory, distributed computing system. 
Neural networks have sometimes been used to solve certain interconnection network 
722 
Neural Network Routing for Random Multistage Interconnection Networks 723 
Input Output 
Ports Ports 
t i Network i.._ 
I Neura' I I Interconnection 
Logicl  5,',,,o,-' -- Logic2 l: Network 
[_ _[7 ':' __= = == J Controller 
Externa{ Control 
Figure 1: The communication system with a neural network router. The input 
ports (processors) are on the left, while the output ports (memory modules) are on 
the right. 
problems, such as finding legal routes (Brown, 1989; Hakim and Meadows, 1990) 
and increasing the throughput of an interconnection network (Brown and Liu, 1990; 
Marrakchi and Troudet, 1989). The neural network router that is the subject of 
this work, however, differs significantly from these other routers and is specially 
designed to handle parallel processing systems that have MINs with random inter- 
stage connections. Such random MINs are called RMINs. RMINs tend to have 
greater fault-tolerance than regular MINs. 
The problem is to allow a set of processors to access a set of memory modules 
through the RMIN. A picture of the communication system with the neural network 
router is shown in Figure 1. The are m processors and n memory modules. The 
system is assumed to be synchronous. At the beginning of a message cycle, some 
set of processors may desire to access some set of memory modules. It is the 
job of the router to establish as many of these desired connections as possible in 
a non-conflicting manner. Obtaining the optimal solution is not critical. Stymied 
processors may attempt communication again during the subsequent message cycle. 
It is the combination of speed and the quality of the solution that is important. 
The object of this work was to discover if the neural network router could be compet- 
itive with other types of routers in terms of quality of solution, speed, and resource 
724 Goudreau and Giles 
RMIN1 
1 
? 
1 
RMIN3 
1 2 
1 
RMIN2 
1 
7 
$ 
3 4 
Figure 2: Three random multistage interconnection networks. The blocks that are 
shown are crossbar switches, for which each input may be connected to each output. 
utilization. To this end, the neural network routing scheme was compared to two 
other schemes for routing in RMINs - namely, exhaustive search routing and greedy 
routing. So far, the results of this investigation suggest that the neural network 
router may indeed be a practicable alternative for routing in RMINs that are not 
too large. 
2 EXHAUSTIVE SEARCH ROUTING 
The exhaustive search routing method is optimal in terms of the ability of the router 
to find the best solution. There are many ways to implement such a router. One 
approach is described here. 
For a given interconnection network, every route from each input to each output 
was stored in a database. (The RMINs that were used as test cases in this paper 
always had at least one route from each processor to each memory module.) When 
a new message cycle began and a new message set was presented to the router, 
the router would search through the database for a combination of routes for the 
message set that had no conflicts. A conflict was said to occur if more than one 
route in the set of routes used a single bus in the interconnection network. In the 
case where every combination of routes for the message set had a conflict, the router 
would find a combination of routes that could establish the largest possible number 
of desired connections. 
If there are k possible routes for each message, this algorithm needs a memory of 
size �(rank) and, in the worst case, takes exponential time with respect to the size 
Neural Network Routing for Random Multistage Interconnection Networks 725 
of the message set. Consequently, it is an impractical approach for most RMINs, 
but it provides a convenient upper bound for the performance of other routers. 
3 GREEDY ROUTING 
When greedy routing is applied, message connections are established one at a time. 
Once a route is established in a given message cycle, it may not be removed. Greedy 
routing does not always provide the optimal routing solution. 
The greedy routing algorithm that was used required the same route database as 
the exhaustive search router did. However, it selects a combination of routes in 
the following manner. When a new message set is present, the router chooses one 
desired message and looks at the first route on that message's list of routes. The 
router then establishes that route. Next, the router examines a second message 
(assuming a second desired message was requested) and sees if one of the routes 
in the second message's route list can be established without conflicting with the 
already established first message. If such a route does exist, the router establishes 
that route and moves on to the next desired message. 
In the worst case, the speed of the greedy router is quadratic with respect to the 
size of the message set. 
4 NEURAL NETWORK ROUTING 
The focal point of the neural network router is a neural network of the type that 
was examined by Hopfield (Hopfield, 1984 and 1985). The problem of establishing 
a set of non-conflicting routes can be reduced to a constraint satisfaction problem. 
The structure of the neural network router is completely determined by the RMIN. 
When a new set of routes is desired, only certain bias currents in the network change. 
The neural network routing scheme also has certain fault-tolerant properties that 
will not be described here. 
The neural network calculates the routes by converging to a legal rouing array. A 
legal routing array is 3-dimensional. Therefore, each element of the routing array 
will have three indices. If element ai,5, is equal to 1 then message i is routed 
through output port k of stage j. We say ai,j,k and al,m,n are in the same row if 
i = l and k = n. They are in the same column if i = I and j = m. Finally, they are 
in the same rod if j = m and k = n. 
A legal routing array will satisfy the following three constraints: 
1. one and only one element in each column is equal to 1. 
2. the elements in successive columns that are equal to I represent output ports 
that can be connected in the interconnection network. 
3. no more than one element in each rod is equal to 1. 
The first restriction ensures that each message will be routed through one and 
only one output port at each stage of the interconnection network. The second 
restriction ensures that each message will be routed through a legal path in the 
726 Goudreau and Giles 
interconnection network. The third restriction ensures that any resource contention 
in the interconnection network is resolved. In other words, only one message can 
use a certain output port at a certain stage in the interconnection network. When 
all three of these constraints are met, the routing array will provide a legal route 
for each message in the message set. 
Like the routing array, the neural network router will naturally have a 3-dimensional 
structure. Each al,j,k of a routing array is represented by the output voltage of a 
neuron, ,j,k. At the beginning of a message cycle, the neurons have a random 
output voltage. If the neural network settles in one of the global minima, the 
problem will have been solved. 
A continuous time mode network was chosen. It was simulated digitally. The neural 
network has N neurons. The input to neuron i is ui, its input bias current is Ii, and 
its output is ld. The input ul is converted to the output � by a sigmoid function, 
g(x). Neuron i influences neuron j by a connection represented by i. Similarly, 
neuron j affects neuron i through connection qj. In order for the Liapunov function 
(Equation 5) to be constructed, T must equal Ti. We further assume that 5qi = 0. 
For the synchronous updating model, there is also a time constant, denoted by r. 
N 
= + + z, O) 
j=l 
,-= 
 = g(us) (3) 
1 
g(x) - 1 + e - (4) 
The equations which describe the output of a neuron i are: 
dui 
dt 
The equations above force the neural net into stable states that are the local minima 
of this approximate energy equation 
i N N N 
i=1 j=l i=1 
(5) 
For the neural network, the weights (5q's) are set, as are the bias currents (Ii's). 
It is the output voltages (�'s) that vary to to minimize E. 
Let M be the number of messages in a message set, let $ be the number of stages 
in the RMIN, and let P be the number of ports per stage (P may be a fu
