Implementing Intelligence on Silicon 
Using Neuron-Like Functional MOS Transistors 
Tadashi Shibata, Koji Kotani, Takeo Yamashita, Hiroshi Ishii 
Hideo Kosa -ka, and Tadahiro Ohmi 
Department of Electronic Engineering 
Tohoku University 
Aza-Aoba, Aramaki, Aobaku, Sendal 980 JAPAN 
Abstract 
We will present the implementation of intelligent electronic circuits 
realized for the first time using a new functional device called Neuron 
MOS Transistor (neuMOS or vMOS in short) simulating the behavior 
of biological neurons at a single transistor level. Search for the most 
resembling data in the memory cell array, for instance, can be 
automatically carried out on hardware without any software 
manipulation. Soft Hardware, which we named, can arbitrarily change 
its logic function in real time by external control signals without any 
hardware modification. Implementation of a neural network equipped 
with an on-chip self-learning capability is also described. Through the 
studies of vMOS intelligent circuit implementation, we noticed an 
interesting similarity in the architectures of vMOS logic circuitry and 
biological systems. 
1 INTRODUCTION 
The motivation of this work has stemmed from the invention of a new functional 
transistor which simulates the behavior of biological neurons (Shibata and Ohmi, 1991; 
1992a). The transistor can perform weighted sumination of multiple input signals and 
squashing on the sum all at a single transistor level. Due to its functional similarity, the 
transistor was named Neuron MOSFET (abbreviated as neuMOS or vMOS). What is of 
significance with this new device is that a number of new architecture electronic circuits 
can be build using vMOS' which are different fi'om conventional ones both in operational 
principles and functional capabilities. They are characterized by a high degree of 
parallelism in hardware computation, a large flexibility in hardware configuration and a 
dramatic reduction in the circuit complexity as coinpared to conventional integrated 
919 
920 Shibata, Kotani, Yamashita, Ishii, Kosaka, and Ohmi 
circuits. During the course of studies in exploring vMOS circuit applications an interesting 
similarity has been noticed between the basic vMOS logic circuit architecture and the 
common structure found in biological neuronal systems, i.e., the competitive processes 
of excitatory and inhibitory connections. The pu]pose of this article is to demonstrate how 
powerful the neuron-like functionality in an elemental device is in implementing 
intelligent functions in silicon integrated circuits. 
2 NEURON MOSFET AND SOFT-HARDWARE LOGIC CIRCUITS 
The symbolic representation of a vMOS is given in Fig. 1. A vMOS is a regular MOS 
transistor except that its gate electrode is made electrically floating and multiple input 
terminals are capacitively coupled to the floating gate. The potential of the floating gate 
% is determined as a linear weighted sum of multiple input voltages where each 
weighting factor is given by the magnitude of a coupling capacitance. When 0)F , the 
weighted sum, exceeds the threshold voltage of the transistor, it tums on. Thus the 
function of a neuron model (McCulloch and Pitts, 1943) has been directly imple]nented 
in a simple transistor structure. vMOS transistors were fabricated using the double- 
polysilicon gate technology and a CMOS process was employed for vMOS integrated 
circuits fabrication. It should be noted here that no floating-gate charging effect was 
employed in the operation of vMOS logic circuits. 
V V V 
F N, [ % FLOATING GATE 
O . O 
SOURCE DRAIN 
.,,_c.,K+Gv,+ ..... +c,,v,, > 
CTOT 
Transistor Turns ON 
Figure 1: Schematic of a neuron MOS transistor. 
Since the weighting factors in a vMOS are determined by the overlapping areas of the 
first poly (floating gate) and second poly (input gate) patterns, they are not alterable. For 
this reason, in vMOS applications to self-learning neural network synthesis, a synapse 
cell circuit was provided to each input terminal of a vMOS to represent an alterable 
connection strength. Here the plasticity of a synaptic weight was created by 
charging/discharging of the floating-gate in a vMOS synapse circuitry as described in 4. 
The I- V characteristics of a two-input-gate vMOS having identical coupling capacitances 
are shown in Fig. 2, where one of the input gates is used as a gate terminal and the other 
as a threshold-control terminal. The apparent threshold voltage as seen from the gate 
terminal is changed from a depletion-mode to an enhancement-mode threshold by the 
voltage given to the control terminal. This variable threshold nature of a vMOS, we 
believe, is most essential in creating flexibility in electronic hardware systems. 
Figure 3(a) shows a two-input-variable Soft Hardware Logic (SHL) circuit which can 
represent all possible sixteen Boolean functions for two binary inputs X and X 2 by 
adjusting the control signals V^, V, and V o The inputs, X and X2, are directly coupled 
to the floating gate of a complementary vMOS inverter in the output stage with a 1:2 
coupling ratio. The vMOS inverter, which we call the main inverter, detemfines the logic. 
Implementing Intelligence on Silicon Using Neuron-Like Functional MOS Transistors 921 
CONTROL 
._-- C 
2.0 
1.0 
00 
-5.0 
J acteristics of a variable 
/////)/ threshold transistor. Vol- 
tage at the threshold-con- 
trol terminal was varied 
from +5V to -5V (from 
-2.s 0.0 2.5 50 left to right). 
GATE VOLTAGE (V) 
Xl 0 , 
Vco 
I VDD 
X 2 
VOUT 
i XOR .!.XNOR.i.N,4ND 
Orns 
I I I 
2ms/div 
NOR INHIBIT 
. 
20ms 
5V 
(a) Co) 
Figure 3: Two-input-variable soft hardware logic circuit(a) and measured 
characteristicsCo). The slow operation is due to the loading effect. (The test circuit has no 
output buffers.) 
The inputs are also coupled to the main inverter via three inter-stage vMOS inverters 
(pre-inverters). When the analog variable represented by the binary inputs X and X 2 
increases, the inputs tend to turn on the main inverter via direct connection, while the 
indirect connection via pre-inverters tend to turn off the main inverter because pre- 
inverter outputs change from Vrr to 0 when they turn on. This competitive process creates 
logics. The turn-on thresholds of pre-inverters are made alterable by control signals 
utilizing the variable threshold characteristics of vMOS'. Thus the real-time alteration of 
logic functions has been achieved and are demonstrated by experiments in Fig. 3(b). With 
the basic circuit architecture of the two-staged vMOS inverter configuration shown in Fig. 
3(a), any Boolean function can be generated. We found the inverting connections via pre- 
inverters are most essential in logic synthesis. The structure indicates an interesting 
similarity to neuronal functional modules in which intramodular inhibitory connections 
play essential roles. 
Fixed function logics can be generated much more simply using the basic two-staged 
structure, resulting in a dramatic reduction in transistor counts and interconnections. It has 
been demonstrated that a full adder, 3-b and 4-b A/D converters can be constructed only 
with 8, 16 and 28 transistors, respectively, which should be compared to 30, 174 and 398 
transistors by conventional CMOS design, respectively. The details on vMOS circuit 
design are described in Refs. (Shibata and Ohmi, 1993a; 1993b) and experimental 
verification in Ref. (Kotani et al., 1992). 
922 Shibata, Kotani, Yamashita, Ishii, Kosaka, and Ohmi 
VDD 
Xo . 
YO-- o Y 
Analog 
,5o 
VOUT 
INPUT 
- OUTPUT 
 ?msec/dtv 
 5msec/dlv 
(a) (b) (c) 
Figure 4: Real-time rule-variable data matching circuit (a) and measured wave forms 
Co & c). In (c),/5 is changed as 0.5, 1, 1.5, and 2 [V] from top to bottom. 
A unique vMOS circuit based on the basic structure of Fig. 3(a) is the real-time rule- 
variable data matching circuitry shown in Fig. 4(a). The circuit output becomes high when 
I X - Y I </5. X is the input data, Y the template data and 5 the window width for data 
matching where X, Y and/5 are all time variables. Measured data are shown in Figs. 4(b) 
and 4(c), where it is seen the triple peaks are merged into a single peak as/5 increases 
(Shibata et al., 1993c). The circuit is cronposed of only 10 vMOS' and can be easily 
integrated with each pixel on a image sensor chip. If vMOS circuitry is combined with 
a bipolar image sensor cell having an amplification function (Tanaka et al., 1989), for 
instance, in situ image processing such as edge detection and variable-template matching 
would become possible, leading to an intelligent image sensor chip. 
3 BINARY-MULTIVALUED-ANALOG MERGED HARDWARE 
COMPUTATION 
A winner-take-all circuit (WTA) implemented by vMOS circuitry is given in Fig. 5. 
Each cell is composed of a vMOS variable threshold inverter in which the apparent 
threshold is modified by an analog input signals V^ - V o When the common input signal 
V R is ramped up, the lowest threshold cell (a cell receiving the largest analog input) turus 
on firsfly, at which instance a feedback loop is formed in each cell and the state of the 
cell is self-latched. As a result, only the winner cell yields an output of 1. The circuit has 
been applied to building an associative memory as demonstrated in Fig. 6. The binary data 
stored in a SRAM cell array are all simultaneously matched to the sample data by taking 
XNOR, and the number of matched bits are transferred to the floating gate of each WTA 
cell by capacitance coupling. The WTA action finds the location of data having the largest 
number of matched bits. This principle has been also applied to an sorting circuitry 
(Yamashita et al., 1993). In these circuits all computations are conducted by an algorithm 
directly imbedded in the hardware. Such an analog-digital merged hardware computation 
algorithm is a key to implement intelligent data processing architecture on silicon. A 
multivalued DRAM cel
