Recognition of Manipulated Objects 
by Motor Learning 
Hiroaki Gomi Mitsuo Kawato 
ATR Auditory and Visual Perception Research Laboratories, 
Inui-dani, Sanpei-dani, Seika-cho, Soraku-gun, Kyoto 619-02, Japan 
Abstract 
We present two neural network controller leaming schemes based on feedback- 
error-learning and modular architecture for recognition and control of multiple 
manipulated objects. In the first scheme, a Gating Network is trained to acquire 
object-specific representations for recognition of a number of objects (or sets of 
objects). In the second scheme, an Estimation Network is trained to acquire 
function-specific, rather than object-specific, representations which directly estimate 
physical parameters. Both recognition networks are trained to identify manipulated 
objects using somatic and/or visual information. After learning, appropriate 
motor commands for manipulation of each object are issued by the control 
networks. 
1 INTRODUCTION 
Conventional feedforward neural-network controllers (Barto et al., 1983; Psaltis et al., 
1987; Kawato et al., 1987, 1990; Jordan, 1988; Katayama & Kawato, 1991) can not cope 
with multiple or changeable manipulated objects or disturbances because they cannot 
change immediately the control law corresponding to the object. In interaction with 
manipulated objects or, in more general terms, in interaction with an environment which 
contains unpredictable factor, feedback information is essential for control and object 
recognition. From these considerations, Gomi & Kawato (1990) have examined the 
adaptive feedback controller learning schemes using feedback-error-learning, from which 
impedance control (Hogan, 1985) can be obtained automatically. However, in that scheme, 
some higher system needs to supervise the setting of the appropriate mechanical impedance 
for each manipulated object or environment. 
In this paper, we introduce semi-feedforward control schemes using neural networks which 
receive feedback and/or feedforward information for recognition of multiple manipulated 
objects based on feedback-error-learning and modular network architecture. These schemes 
have two advantages over previous ones as follows. (1) Learning is achieved without the 
547 
$48 Gomi and Kawato 
exact target motor command vector, which is unavailable during supervised motor learning. 
(2) Although somatic information alone was found to be sufficient to recognize objects, 
object identification is predictive and more reliable when both somatic and visual information 
are used. 
2 RECOGNITION OF MANIPULATED OBJECTS 
The most important issues in object manipulation are (1) how to recognize the manipulated 
object and (2) how to achieve uniform performance for different objects. There are several 
ways to acquire helpful information for recognizing manipulated objects. Visual information 
and somatic information (performance by motion) are most informative for object recognition 
for manipulation. 
The physical characteristics useful for object manipulation such as mass, softness and 
slipperiness, can not be predicted without the experience of manipulating similar objects. 
In this respect, object recognition for manipulation should be learned through object 
manipulation. 
3 MODULAR ARCHITECTURE USING GATING NETWORK 
Jacobs et al. (1990, 1991) and Nowlan & Hinton (1990, 1991) have proposed a competitive 
modular network architecture which is applied to the task decomposition problem or 
classification problems. Jacobs (1991) applied this network architecture to the multi-payload 
robotics task in which each expert network controller is trained for each category of 
manipulated objects in terms of the object's mass. In his scheme, the payload's identity is 
fed to the gating network to select a suitable expert network which acts as a feedforward 
controller. 
We examined modular network architecture using feedback-error-learning for simultaneous 
learning of object recognition and control task as shown in Fig. 1. 
Visual Information Information 
Fig.1 Configuration of the modular architecture using Gating Network 
for object manipulation based on feedback-error-learning 
In this learning scheme, the quasi-target vector for combined output of expert networks is 
employed instead of the exact target vector. This is because it is unlikely that the exact 
target motor command vector can be provided in learning. The quasi-target vector of 
feedforward motor command, u' is produced by: 
u': u + u. (1) 
Recognition of Manipulated Objects by Motor Learning 549 
Here, u denotes the previous final motor command and u, denotes the feedback motor 
command. Using this quasi-target vector, the gating and expert networks are trained to 
maximize the log-likelihood function, In L, by using backpropagation. 
In L = h, z., ;i  (2) 
i=1 
Here, ui is the i th expert network output, tyi is a variance scaling parameter of the i th 
expert network and gi, the i th output of gating network, is calculated by 
gi - ,, , (3) 
j=l 
where s denotes the weighted input received by the i th output unit. The total output of 
the modular network is 
= Z g,u, . (4) 
i=1 
By maximizing Eq.2 using steepest ascent method, the gafing network learns to choose 
the expert network whose output is closest to the quasi-target command, and each expert 
network is tuned correctly when it is chosen by the gating network. The desired trajectory 
is fed to the expert networks so as to make them work as feedforward controllers. 
4 SIMULATION OF OBJECT MANIPULATION 
BY MODULAR ARCHITECTURE WITH GATING NETWORK 
We show the advantage of the learning schemes presented above by simulation results 
below. The configuration of the controlled object and manipulated object is shown in 
Fig.2 in which M, B, K respectively denote the mass, viscosity and stiffness of the 
coupled object (controlled- and manipulated-object). The manipulated object is changed 
every epoch (1 [sec]) while the coupled object is controlled to track the desired trajectory. 
Fig.3 shows the selected object, the feedforward and feedback motor commands, and the 
desired and actual trajectories before learning. 
20- I -- 
0 5 10 15 20 
time [sec] 
Fig.3 Temporal patterns of the selected 
object, the motor commands, the desired 
and actual wajectories fore lrning 
x 
d obj h 
J ,,;. [' Controlled 'l 
Fig.2 Ceatien ef the ne 
ej an the ni! 
The desired trajectory, %, was produced by Ornstein-Uhlenbeck random process. As 
shown in Fig.3, the error between the desired trajectory and the actual trajectory remained 
because the feedback controller in which the gains were fixed, was employed in this 
condition. (Physical characteristics of the objects used are listed in Fig.4a) 
550 Gomi and Kawato 
4.1 SOMATIC INFORMATION FOR GATING NETWORK 
We call the actual trajectory vector, x, and the final motor command, u , somatic 
information. Somatic information should be most useful for on-line (feedback) recognition 
of the dynamical characteristics of manipulated objects. The latest four times data of 
somatic information were used as the gating network inputs for identification of the 
coupled object in this simulation. s of Eq.3 is expressed as: 
s(t)= (x(t),x(t-1),x(t-2),x(t-3),u(t),u(t-1),u(t-2),u(t-3)). (5) 
The dynamical characteristics of coupled objects are shown in Fig.4a. The object was 
changed in every epoch (1 [sec]). The variance scaling parameter was rr i = 0.8 and the 
learning rates were r/et, = 1.0 x 10-3and experti = 1.0 x 10 -. The three-layered feedforward 
neural network (input 16, hidden 30, output 3) was employed for the gating network and 
the two-layered linear networks (input 3, output 1) were used for the expert networks. 
Comparing the expert's weights after learning and the coupled object characteristics in 
Fig.4a, we realize that expert networks No. 1, No.2, No.3 obtained the inverse dynamics 
of coupled objects 7, 15, Ix, respectively. The time variation of object, the gating network 
outputs, motor commands and trajectories after learning are shown in Fig.4b. The gating 
network outputs for the objects responded correctly in the most of the time and the 
feedback motor command, u,, was almost zero. As a consequence of adaptation, the 
actual trajectory almost perfectly corresponded with the desired trajectory. 
b. 
a. Gating Net. Outputs v.s. Objects ' 
Object Expert NeL Weight values for each input 
physical retinal after earning 
characteristics mage No.1 No.2 I No.3 
____ 8'1 2.5 0.87 5.0 6.9 4.0 0'i 
1.0 2.0 e.0 none 
5.0 7.0 4.0 none J 
-.-.?-.-.....-.....-...v..;:; 
''''i';'i'i'i'i'?? 
o.  I I I I I 
actual 
0 5 10 15 20 
time [sec] 
Fig.4 Somatic information for gating network, a. Statistical analysis of the 
correspondence of the expert networks with each object after learning (averaged 
gating outputs), b. Temporal patterns of objects, gating outputs, motor commands 
and trajectories after leaming 
4.2 VISUAL INFORMATION FOR GATING NETWORK 
We usually assume the manipulated object's characteristics by using visual information. 
Visual information might be helpful for feedforward recognition. In this case, s of Eq.3 is 
expressed as: 
s(t)= 2 (V(t)) (6) 
We used three visual cues corresponding to each coupled object in this simulation as 
shown in Fig.5a. At each epoch in this simulation, one of three visual cues selected 
randomly is randomly placed at one of four possible locations on a 4 x 4retinal matrix. 
Recognition of Manipulated Objects by Motor Learning 551 
The visual cues of each object are different, but object ot and or* have the same dynamical 
characteristics as shown in Fig.5a. The gating network should identify the object and 
select a suitable expert network for feedforward control by using this visual information. 
The learning coefficients were o' i = 0.7, r/ga = 1.0 x 10 -3, r/exr i = 1.0 x 10 -s . The same 
networks used in above experiment were used in this simula
