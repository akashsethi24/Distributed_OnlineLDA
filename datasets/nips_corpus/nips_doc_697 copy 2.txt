Visual Motion Computation in Analog 
VLSI using Pulses 
Rahul Sarpeshkar, Wyeth Bair and Christof Koch 
Computation and Neural Systems Program 
California Institute of Technology 
Pasadena, CA 91125. 
Abstract 
The real time computation of motion from real images 
using a single chip with integrated sensors is a hard prob- 
len. We present two analog VLSI schemes that use pulse 
domain neuromorphic circuits to compute motion. Pulses 
of variable width, rather than graded potentials, represent 
a natural medimn for evaluating temporal relationships. 
Both algorithms measure speed by timing a moving edge 
in the image. Our first model is inspired by Reichardt's 
algorithm in the fly and yields a non-monotonic response 
rs. velocity curve. We present data from a chip that 
implements this model. Our second algorithm yields a 
nonotonic response rs. velocity curve and is currently 
being translated into silicon. 
I Introduction 
Analog VLSI chips for the real time computation of visual motion have been the 
focus of much active research because of their importance as sensors for robotic 
applications. Correlation schemes such as those described in (Delbriick, 1993) 
have been found to be more robust than gradient schemes described in (Tanner and 
Mead, 1986), because they do not involve noise-sensitive operations like spatial- 
differentiation and division. A comparison of four experimental schemes may be 
found in (Horiuchi et al., 1992). In spite of years of work, however, there is still no 
motion chip that robustly computes motion under all environmental conditions. 
781 
782 Sarpeshkar, Bair, and Koch 
Motion algorithms operating on higher level percepts in an image such as zero- 
crossings (edges) are more robust than those that operating on lower level percepts 
in an image such as raw image intensity values (Mart and Ullman, 1981). Our work 
demonstrates how, if the edges in an image are identified, it is possible to compute 
motion, quickly and easily, by using pulses. We compute the velocity at each point 
in the image. The estimation of the flow-field is of tremendous importance in 
computations such as time-to-contact, figure-ground-segregation and depth-from- 
motion. Our motion scheme is well-suited to typical indoor environments that tend 
to have a lot of high-contrast edges. The much harder problem of computing motion 
in low-contrast, high-noise outdoor environments still remains unsolved. 
We present two motion algorithms. Our first algorithm is a delay-and-correlate 
scheme operating on spatial edge features and is inspired by work on fly vision 
(Hassenstein and Reichardt, 1956). It yields a non-monotonic response rs. velocity 
curve. We present data from a chip that implements it. Our second algorithm is 
a facilitate-and-trigger scheme operating on temporal edge features and yields a 
monotonic response rs. velocity curve. Work is under way to implement our second 
algorithm in analog VLSI. 
2 The Delay-and-Correlate Scheme 
Conceptually, there are two stages of computation. First, the zero-crossings in 
the image are computed and then the motion of these zero-crossings is detected. 
The zero-crossing circuitry has been described in (Bair and Koch, 1991). We 
concentrate on describing the motion circuitry. 
A schematized version of the chip is shown in Figure la. Only four photoreceptors in 
the array are shown. The 1-D image from the array of photoreceptors is filtered with 
a spatial bandpass filter whose kernel is composed of a difference of two exponentials 
(implemented with resistive grids). The outputs of the bandpass filter feed into 
edge detection circuitry that output a bit indicating the presence or absence of 
an edge between two adjacent pixels. The edges on the chip are separated into 
two polarities, namely, right-side-bright (R) and left-side-bright (L), which are kept 
separate throughout the chip, including the motion circuitry. For comparison, in 
biology, edges are often separated into light-on edges and light-off edges. The motion 
circuits are sensitive only to the motion of those edges from which they receive 
inputs. They detect the motion of a zero-crossing from one location to an adjacent 
location using a Reichardt scheme as shown in Figure lb. Each motion detecting 
unit receives two zero-crossing inputs ZCn and ZCn+21. The ON-cells detect the 
onset of zero-crossings (a rising voltage edge) by firing a pulse. The units marked 
with D's delay these pulses by an amount D, controlled externally. The correlation 
units marked with X's logically AND a delayed version of a pulse from one location 
with an undelayed version of a pulse from the adjacent location. The output from 
the left correlator is sensitive to motion from location n + 2 to location n since the 
motion delay is compensated by the built-in circuit delay. The outputs of the two 
correlators are subtracted to yield the final motion signal. Figure 2a shows the 
circuit details. The boxes labelled with pulse symbols represent axon circuits. The 
1 ZCn.ar I could have been used as well. ZC,+2 was chosen due to wiring constraints and 
because it increases the baseline distance for computing motion. 
Visual Motion Computation in Analog VLSI using Pulses 783 
A 
BANDPASS SPATIAL FILTER 
L 
R 
/ \ 
/ \ 
I M ] 
B 
ON ON 
Mtn 
Figure 1--(A) The bandpass filtered photoreceptor signal is fed to the edge 
detectors marked with Es. The motion of these edges is detected by the 
motion detecting units marked with M's. (B) A single motion detecting unit, 
corresponding to a M unit in fig. A has a Reichardt-like architecture. 
axon circuits generate a single pulse of externally controlled width, P, in response 
to a sharp positive transition in their input, but remain inactive in response to a 
negative transition. In order to generate pulses that are delayed from the onset 
of a zero-crossing, the output of one axon circuit, with pulse width parameter D, 
is coupled via an inverter to the input of another axon circuit, with pulse width 
parameter P. The multiplication operation is implemented by a simple logical AND. 
The subtraction operation is implemented by a subtraction of two currents. An off- 
chip sense amplifier converts the bidirectional current pulse outputs of the local 
motion detectors into active-low or active-high voltage pulses. The axon circuit is 
shown in Figure 2b. Further details of its operation may be found in (Sarpeshkar 
et al., 1992). 
Figure 3a shows how the velocity tuning curve is obtained. If the image velocity, v, 
is positive, and Ax is the distance between adjacent zero-crossing locations, then 
it can be shown that the output pulse width for the positive-velocity half of the 
motion detector, tp, is 
tp=uO(u), (1) 
784 Sarpeshkar, Bair, and Koch 
where 
u=P- I ---V I, (2) 
v 
and O() is the unit step function. If v is negative, the same eqns. apply for the 
negative-velocity half of the motion detector except that the signs of Ax and tp are 
reversed. 
A 
B 
Figure 2 (A) The circuitry implementing the Reichardt scheme of Figure lb, 
is shown. The boxes labelled P and D represent axon circuits of pulse width 
parameter P and D, respectively. (B) The circuit details of an axon circuit 
that implements an ON-cell of Figure lb are shown. The input and output 
are 14n and Vou respectively. The circuit was designed to mimic the behavior 
of sodium and leak conductances at the node of Ranvier in an axon fiber. The 
pulse width of the output pulse, the refractory period following its generation, 
and the threshold height of the input edge needed to trigger the pulse are 
determined by the values of bias voltages VD, VR and VL respectively. 
Experimental Data 
Figure 4a shows the outputs of motion detectors between zero-crossings 3 and 5, 7 
and 9, and 11 and 13, denoted as Mr3, Mr7, and Mtso, respectively. For an edge 
passing from left to right, the outputs Mtll, Mt7 and Mt3 are excited in this order, 
and they each report a positive velocity (active high output that is above VREr). 
For an edge passing from right to left, the outputs Mt, Mt and Mtl are excited in 
this order and they each report a negative velocity (active low output that is below 
VRrr). Note that the amplitudes of these pulses contMn no speed information and 
only signal the direction of motion. Figure 4b shows that the output Mt is tuned 
to a particular velocity. As the rotational frequency of a cylinder with a painted 
edge is decreased from a velocity corresponding to a motor voltage of - 6.1V to a 
velocity corresponding to a motor voltage of-l.3V, the output pulse width increases, 
then decreases again, as the optimal velocity is traversed through. A similar tuning 
curve is observed for positive motor voltages. If the distance from the surface of 
the spinning cylinder to the center of the lens is o, the distance from the center of 
the lens to the chip is i, the radius of the spinning cylinder is R, and its frequency 
Visual Motion Computation in Analog VLSI using Pulses 785 
P 
m ID-P D D+P 
 D+P D-P 
Delayed 
Pulse 
> 
Time 
Undelayed 
Pulse 
Time 
Motion Delay 
-;-) 
Velocity (v) 
I I 
-lOO 
I I I 
o lOO 
Velocity (deg/sec) 
Figure 3--(a) The figure shows how the overlap between the delayed and unde- 
layed pulses gives rise to velocity tuning for motion in the preferred direction. 
(b) The figure shows experimental data (circles) and a theoretical fit (line) for 
the motion unit Mta's output response vs. angular velocity. 
of rotation is f, then the velocity, v, of the moving edge as seen by the chip is given 
by 
v= 2rfR -. (3) 
o 
The angular velocity, w, of the moving edge, is 
2rf R v 
w = -- = :. (4) 
o $ 
Figure 3b shows the output pulse width of Mt3 plotted against the angular velocity 
of the edge (co). The data are fit by a curve that computes tp vs. co from (1)-(4), 
using measured values of Ax = 180 pm, o = 310 mm, i = 17 mm, and R = 58 mm. 
786 Sarpeshkar, Bair, and Koch 
0.0
