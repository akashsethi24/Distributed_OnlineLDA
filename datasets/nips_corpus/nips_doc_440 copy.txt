Adaptive Elastic Models for Hand-Printed 
Character Recognition 
Geoffrey E. Hinton, Christopher K. I. Williams and Michael D. Revow 
Department of Computer Science, University of Toronto 
Toronto, Ontario, Canada MSS 1A4 
Abstract 
Hand-printed digits can be modeled as splines that are governed by about 
8 control points. For each known digit, the control points have preferred 
home locations, and deformations of the digit are generated by moving 
the control points away from their home locations. Images of digits can bc 
produced by placing Gaussian ink generators uniformly along the spline. 
Real images can be recognized by finding the digit model most likely to 
have generated the data. For each digit model we use an elastic matching 
algorithm to minimize an energy function that includes both the defor- 
mation energy of the digit model and the log probability that the model 
would generate the inked pixels in the image. The model with the lowest 
total energy wins. If a uniform noise process is included in the model of 
image generation, some of the inked pixels can be rejected as noise as a 
digit model is fitting a poorly segmented image. The digit models learn 
by modifying the home locations of the control points. 
I Introduction 
Given good bottom-up segmentation and normalization, feedforward neural net- 
works are an efficient way to recognize digits in zip codes. (le Cun et al., 1990). 
However, in some cases, it is not possible to correctly segment and normalize the 
digits without using knowledge of their shapes, so to achieve close to human per- 
formance on images of whole zip codes it will be necessary to use models of shapes 
to influence the segmentation and normalization of the digits. One way of doing 
this is to use a large cooperative network that simultaneously segments, normalizes 
and recognizes all of the digits in a zip code. A first step in this direction is to take 
a poorly segmented image of a single digit and to explain the image properly in 
terms of an appropriately normalized, deformed digit model plus noise. The ability 
of the model to reject some parts of the image as noise is the first step towards 
model-driven segmentation. 
512 
Adaptive Elastic Models for Hand)Printed Character Recognition 513 
2 Elastic models 
One technique for recognizing a digit is to perform an elastic match with many 
different exemplars of each known digit-class and to pick the class of the nearest 
neighbor. Unfortunately this requires a large number of elastic matches, each of 
which is expensive. By using one elastic model to capture all the variations of a given 
digit we greatly reduce the number of elastic matches required. Burr (1981a, 1981b) 
has investigated several types of elastic model and elastic matching procedure. We 
describe a different kind of elastic model that is based on splines. Each elastic 
model contains parameters that define an ideal shape and also define a deformation 
energy for departures from this ideal. These parameters are initially set by hand 
but can be improved by learning. They are an efficient way to represent the many 
possible instances of a given digit. 
Each digit is modelled by a deformable spline whose shape is determined by the 
positions of 8 control points. Every point on the spline is a weighted average of 
four control points, with the weighting coefficients changing smoothly as we move 
along the spline. i To generate an ideal example of a digit we put the 8 control 
points at their home locations for that model. To deform the digit we move the 
control points away from their home locations. Currently we assume that, for each 
model, the control points have independent, radial Gaussian distributions about 
their home locations. So the negative log probability of a deformation (its energy) 
is proportional to the sum of the squares of the departures of the control points 
from their home locations. 
The deformation energy function only penalizes shape deformations. Translation, 
rotation, dilation, elongation, and shear do not change the shape of an object so we 
want the deformation energy to be invariant under these affine transformations. We 
achieve this by giving each model its own object-based frame. Its deformation 
energy is computed relative to this frame, not in image coordinates. When we fit 
the model to data, we repeatedly recompute the best affine transformation between 
the object-based frame and the image (see section 4). The repeated recomputation 
of the affine transform during the model fit means that the shape of the digit is 
influencing the normalization. 
Although we will use our digit models for recognizing images, it helps to start by 
considering how we would use them for generating images. The generarive model is 
an elaboration of the probabilistic interpretation of the elastic net given by Durbin, 
Szeliski & Yuille (1989). Given a particular spline, we space a number of beads 
uniformly along the spline. Each bead defines the center of a Gaussian ink generator. 
The number of beads on the spline and the variance of the ink generators can easily 
be changed without changing the spline itself. 
To generate a noisy image of a particular digit class, run the following procedure: 
Pick an affine transformation from the model's intrinsic reference frame to the 
image frame (i.e. pick a size, position, orientation, slant and elongation for the 
digit). 
1 In computing the weighting coefficients we use a cubic B-spline and we treat the first 
and last control points as if they were doubled. 
514 Hinton, Williams, and Revow 
Pick a deformation of the model (i.e. move the control points away from their 
home locations) The probability of picking a deformation is  -Ejor, 
Repeat many times: 
Either (with probability rnoise) add a randomly positioned noise pixel 
Or pick a bead at random and generate a pixel from the Gaussian 
distribution defined by the bead. 
3 Recognizing isolated digits 
We recognize an image by finding which model is most likely to have generated it. 
Each possible model is fitted to the image and the one that has the lowest cost fit is 
the winner. The cost of a fit is the negative log probability of generating the image 
given the model. 
Eideal = -- log / P(I) P(image I 1) dI (1) 
lmodel 
instances 
We can approximate this by just considering the best fitting model instance 2 and 
ignoring the fact that the model should not generate ink where there is no ink in 
the image: a 
E = A Edefor. -- E 1ï¿½gP(pixellbest model instance) (2) 
inked 
pixels 
The probability of an inked pixel is the sum of the probabilities of all the possible 
ways of generating it from the mixture of Gaussian beads or the uniform noise field. 
7rmodel 
P(i) = roise + Z Pb(i) (3) 
N B 
beads 
where N is the total number of pixels, B is the number of beads, r is a mixing 
proportion', and Pb(i) is the probability density of pixel i under Gaussian bead b. 
4 The search procedure for fitting a model to an image 
Every Gaussian bead in a model has the same variance. When fitting data, we start 
with a big variance and gradually reduce it as in the elastic net algorithm of Durbin 
and Willshaw (1987) . Each iteration of the elastic matching algorithm involves 
three steps: 
2In effect, we are assuming that the integral in equation 1 can be approximated by the 
height of the highest peak, and so we are ignoring variations between models in the width 
of the peak or the number of peaks. 
3If the inked pixels are rare, poor models sin mainly by not inking those pixels that 
should be inked rather than by inking those pixels that should not be inked. 
Adaptive Elastic Models for Hand)Printed Character Recognition 515 
Given the current locations of the Gaussians, compute the responsibility that 
each Gaussian has for each inked pixel. This is just the probability of generating 
the pixel from that Gaussian, normalized by the total probability of generating 
the pixel. 
Assuming that the responsibilities remain fixed, as in the EM algorithm ot' 
Dempster, Laird and Rubin (1977), we invert a 16 x 16 matrix to find the 
image locations for the 8 control points at which the forces pulling the control 
points towards their home locations are balanced by the forces exerted on the 
control points by the inked pixels. These forces come via the forces that the 
inked pixels exert on the Gaussian beads. 
Given the new image locations of the control points, we recompute the affine 
transformation from the object-based frame to the image frame. We choose 
the arline transformation that minimizes the sum of the squared distances, in 
object-based coordinates, between the control points and their home locations. 
The residual squared differences determine the deformation energy. 
Some stages in the fitting of a model to data are shown in Fig. 1. This search 
technique avoids nearly all local minima when fitting models to isolated digits. But 
if we get a high deformation energy in the best fitting model, we can try alternative 
starting configurations for the models. 
5 Learning the digit models 
We can do discriminative learning by adjusting the home positions and variances 
of the control points to minimize the objective function 
C =- , logp(correct digit), p(correct digit)= e_Ea,y,, (4) 
training Eall digits 
cases 
For a model parameter such as the x coordinate of the home location of one of the 
control points we need OC/Ox in order to do gradient descent learning. Equation 
4 allows us to express OC/Ox in terms of OE/Ox but there is a subtle problem: 
Changing a parameter of an elastic model causes a simple change in the energy 
of the configuration that the model previously settled to, but the model no longer 
settles to that configuration. So it appears that we need to consider how the energy 
is affected by the change in the configuration. Fortunately, derivatives are simple at 
an energy minimum because small changes in the
