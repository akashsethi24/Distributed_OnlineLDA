Generalization by Weight-Elimination 
with Application to Forecasting 
Andreas S. Weigend 
Physics Department 
Stanford University 
Stanford, CA 94305 
David E. Rumelhart 
Psychology Department 
Stanford University 
Stanford, CA 94305 
Bernardo A. Huberman 
Dynamics of Computation 
Xerox PARC 
Palo Alto, CA 94304 
Abstract 
Inspired by the information theoretic idea of minimum description length, we add 
a term to the back propagation cost function that penalizes network complexity. 
We give the details of the procedure, called weight-elimination, describe its 
dynamics, and clarify the meaning of the parameters involved. From a Bayesian 
perspective, the complexity term can be usefully interpreted as an assumption 
about prior distribution of the weights. We use this procedure to predict the 
sunspot time series and the notoriously noisy series of currency exchange rates. 
I INTRODUCTION 
Learning procedures for connectionist networks are essentially statistical devices for per- 
forming inductive inference. There is a trade-off between two goals: on the one hand, we 
want such devices to be as general as possible so that they are able to learn a broad range 
of problems. This recommends large and flexible networks. On the other hand, the true 
measure of an inductive device is not how well it performs on the examples it has been 
shown, but how it performs on cases it has not yet seen, i.e., its out-of-sample performance. 
Too many weights of high precision make it easy for a net to fit the idiosyncrasies or noise 
of the training data and thus fail to generalize well to new cases. This overfitting problem 
is familiar in inductive inference, such as polynomial curve fitting. There are a number 
of potential solutions to this problem. We focus here on the so-called minimal network 
strategy. The underlying hypothesis is: if several nets fit the data equally well, the simplest 
one will on average provide the best generalization. Evaluating this hypothesis requires (i) 
some way of measuring simplicity and (ii) a search procedure for finding the desired net. 
The complexity of an algorithm can be measured by the length of its minimal description 
875 
876 Weigend, Rumelhart, and Huberman 
in some language. Rissanen [Ris89] and Cheeseman [Che90] formalized the old but vague 
intuition of Occam's razor as the information theoretic minimum description length (MDL) 
criterion: Given some data, the most probable model is the model that minimizes 
description length = description length(data[model) + description length(model) . 
cost error complexity 
This sum represents the trade-off between residual error and model complexity. The goal is 
to find a net that has the lowest complexity while fitting the data adequately. The complexity 
is dominated by the number of bits needed to encode the weights. It is roughly proportional 
to the number of weights times the number of bits per weight. We focus here on the 
procedure of weight-elimination that tries to find a net with the smallest number of weights. 
We compare it with a second approach that tries to minimize the number ofbitsper weight, 
thereby creating a net that is not too dependent on the precise values of its weights. 
2 WEIGHT-ELIMINATION 
In 1987, Rumelhart proposed a method for finding minimal nets within the framework of 
back propagation learning. In this section we explain and interpret the procedure and, for 
the first time, give the details of its implementation. 1 
2.1 METHOD 
The idea is indeed simple in conception: add to the usual cost function a term which counts 
the number of parameters, and minimize the sum of performance error and the number of 
weights by back propagation, 
2 2 
t0 i/tO o 
 (target - outputs)2 +   1 + w/2/wo 2 (1) 
kT iC 
The first term measures the performance of the net. In the simplest case, it is the sum 
squared error over the set of training examples T. The second term measures the size of 
the net. Its sum extends over all connections C. A represents the relative importance of the 
complexity term with respect to the performance term. 
The learning rule is then to change the weights according to the gradient of the entire cost 
function, continuously doing justice to the trade-off between error and complexity. This 
differs from methods that consider a set of fixed models, estimate the parameters for each 
of them, and then compare between the models by considering the number of parameters. 
The complexity cost as function of wi/wo is shown in Figure l(b). The extreme regions of 
very large and very small weights are easily interpreted. For [wil >> w0, the cost of a weight 
approaches unity (times ). This justifies the interpretation of the complexity term as a 
counter of significantly sized weights. For I wil << w0, the cost is close to zero. Large and 
small are defined with respect to the scale w0, a free parameter of the weight-elimination 
procedure that has to be chosen. 
The original formulation benefited from conversations with Paul Smolensky. Variations, and 
alternatives have been developed by Hinton, Hanson and Pratt, Mozer and Smolensky, le Cun, 
Denker and Solla, Ji, Snapp and Psaltis and others. They are discussed in Weigend [Wei91]. 
Generalization by Weight-Elimination with Application to Forecasting 877 
-0.8 
prior f\ ......... ) = 4 
probability / ! , = 2 
-0.5 t \ 
0.2 , -_.- (a) 
-4 -3 -2 -1 0 I 2 3 4 
-3 -2 -1 0 I 2 3 4 
= 1.8 
1.2 
o.o 0.5 1.0 
0.9 
;ost 
0.8 
0.7 
- 0.6 
- 0.5 
- 0.4 
Figure 1: (a) Prior probability distribution for a weight. (b) Corresponding cost. 
(c) Cost for different values of $/wo as function of o = wi IS, where $ = wi + w2. 
To clarify the meaning of w0, let us consider a unit which is connected--redundantly--by 
two weights (w and w2) to the same signal source. Is it cheaper to have two smaller weights 
or just one large weight? Interestingly, as shown in Figure l(c), the answer depends on the 
ratio S/wo, where $ = wl + w2 is the relevant sum for the receiving unit. For values of 
$/wo up to about 1.1, there is only one minimum at c := wi/S = 0.5, i.e., both weights 
are present and equal. When $/wo increases, this symmetry gets broken; it is cheaper to 
set one weight -, $ and eliminate the other one. 
Weight-decay, proposed by Hinton and by le Cun in 1987, is contained in our method of 
weight-elimination as the special case of large w0. In the statistics community, this limit 
(cost oc w/2) is known as ridge regression. The scale parameter w0 thus allows us to express 
a preference for fewer large weights (w0 small) or many small weights (w0 large). In our 
experience, choosing w0 of order unity is good for activations of order unity. 
2.2 INTERPRETATION AS PRIOR PROBABILITY 
Further insight can be gained by viewing the cost as the negative log likelihood of the 
network, given the data. In this framework 2, the error term is the negative logarithm of the 
probability of the data given the net, and the complexity term is the negative logarithm of 
the prior probability of the weights. 
The cost function corresponds approximately to the assumption that the weights come from 
a mixture of two distributions. Relevant weights are drawn from a uniform distribution (to 
2This perspective is expanded in a forthcoming paper by Rumelhart et al. [RDGC92]. 
878 Weigend, Rumelhart, and Huberman 
allow for normalization of the probability, up to a certain maximum size). Weights that are 
merely the result ofnoise are drawn from a Gaussian-like distribution centered on zero; 
they are expected to be small. We show the prior probability for our complexity term for 
several values of A in Figure l(a). If we wish to approximate the bump around zero by a 
Gaussian, its variance is given by 2 = Wo2/A. Its width scales with w0. 
Perhaps surprisingly the innocent weighting factor A now influences the width: the variance 
of the noise is inversely proportional to A. The larger A is, the closer to zero a weight 
must be to have a reasonable probability of being a member of the noise distribution. 
Also, the larger A is, the more pressure small weights feel to become even smaller. 
The following technical section describes how A is dynamically adjusted in training. From 
the perspective taken in Section 2.1, the usual increase of A during training corresponds to 
attaching more importance to the complexity term. From the perspective developed in this 
section, it corresponds to sharpening the peak of the weight distribution around zero. 
2.3 DETAILS 
Although the basic form of the weight-elimination procedure is simple, it is sensitive to the 
choice of A. 3 If A is too small, it will have no effect. If  is too large, all of the weights will 
be driven to zero. Worse, a value of  which is useful for a problem that is easily learned 
may be too large for a hard problem, and a problem which is difficult in one region (at the 
start, for example) may require a larger value of  later on. We have developed some rules 
that make the performance relatively insensitive to the exact values of the parameters. 
We start with A = 0 so that the network can initially use all of its resources. A is changed after each 
epoch. It is usually gently incremented, sometimes decremented, and, in emergencies, cut down. The 
choice among these three actions depends on the value of the error on the training set 
The subscript n denotes the number of the epoch that has just finished. (Note that &, is only the 
first term of the cost function (Equation 1). Since gradient descent minimizes the sum of both terms, 
&, by itself can decrease or increase.) &, is compared to three quantities, the first two derived from 
previous values of that error itself, the last one given externally: 
� &,_ Previous error. 
� .A, Average error (exponentially weighted over the past). 
It is defined as A, = 7A,- + (1 - 7)&, (with 7 relatively close to 1). 
� 29 Desired error, the externally pr
