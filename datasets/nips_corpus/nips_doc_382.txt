Exploiting Syllable Structure 
in a Connectionist Phonology Model 
David S. Touretzky Deirdre W. Wheeler 
School of Computer Science 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 
Abstract 
In a previous paper (Touretzky & Wheeler, 1990a) we showed how adding a 
clustering operation to a connectionist phonology model produced a parallel pro- 
cessing account of certain itemfive phenomena. In this paper we show how the 
addition of a second structuring primitive, syllabification, greatly increases the 
power of the model. We present examples from a non-Indo-European language 
that appear to require rule ordering to at least a depth of four. By adding syllab- 
ification circuitry to structure the model's perception of the input string, we are 
able to handle these examples with only two derivational steps. We conclude that 
in phonology, derivation can be largely replaced by structuring. 
1 Introduction 
In linguistics a grammar is an abstract formal system describing a language. The term 
psycho-grammar has been suggested for systems that express the linguistic knowledge 
that actually exists in speakers' heads (George, 1989). Psycho-grammars may differ from 
grammars as a result of performance demands, limited memory capacity, or other aspects 
of mental representations. Psycho-grammars are still somewhat abstract, in that they 
are concerned with mental rather than physical phenomena. The term physio-grammar 
(George, 1989) refers to the the physical representation of grammatical knowledge in neural 
structures, such as (perhaps) synapse strengths. Detailed proposals for physio-grammars 
do not yet exist; the field of neurolinguistics is insufficiently advanced to support such 
proposals at present. 
We are developing a theory of phonology that is compatible with gross constraints on 
neural processing and cognitive plausibility. Our research, then, is on the construction of 
psycho-grammars at the phonological level. We use a connectionist model to demonstrate 
612 
Exploiting Syllable Structure in a Connectionist Phonology Model 613 
M-level I 
change 
M-P 
Map 
I 
I 
I 
M-P Rules 
P-level I I 
h P-F Rules 
I ange I= ' 
Figure 1: Structure of the model. 
F-level 
the computational feasibility of the psycho-grammar architecture we propose. In this paper 
we show how the addition of syllabification as a primitive operation greatly increases the 
scope and power of the model at little computational cost. 
2 Structure of the Model 
Our model, shown in Figure 1, has three levels of representation. Following Lakoff (1989), 
they are labeled M, P, and F. The M, or morpho-phonemic level, is a sequence of phonemes 
constructed by concatenating abstract underlying representations of morphemes. The P, or 
phonemic level, is an intermediate representation that is constrained to hold syllabically 
well-formed strings. The F, or phonetic level, is the surface level representation: a sequence 
of phonetic segments. Derivations are performed by mapping strings from M to P level, 
and then from P to F level, under the control of a set of language-specific rules. These 
rules alter the mapping in various ways to effect processes such as voicing assimilation and 
vowel harmony. 
The model has a number of important constraints. Rules at a given level (M-P or P-F) 
apply in a single parallel step during the mapping from one level to the next. There 
is no iterative rule application. Iterative processes are instead handled by a parallel 
clustering mechanism described in Touretzky & Wheeler (1990a,1991). The connectionist 
implementation uses limited-depth, strictly feed-forward circuitry, so the model has minimal 
computational complexity. 
Another very important constraint is that only two levels of derivation are provided, M-P 
and P-F, so there is no room for the long chains of ordered rules that other phonological 
theories permit. However, in standard analyses some languages appear to require long rule 
chains. The problem for those who want to eliminate such chains on grounds of cognitive 
implausibility  is to reformulate existing linguistic analyses to account for the data in some 
XHere we are referring to Goldsmith (1990) and Lakoff (1989), as well as our own work. 
614 Tourezky and Wheeler 
/ hro+aht  he has disappeared 
hro ht  vowel deletion 
hr6 ht  stress 
r6 ht  initial h-deletion 
r6 hd pre-son. voicing 
[ r0 hda] 
/ +k+hrek+?/ I will push it 
^ k hrek ? stress 
^ k hreke? epenthesis 
^ k hrege? pre-son. voicing 
[ k hrege?] 
Figure 2: Two Mohawk derivations. 
other way. This is not always easy to do, especially in our model, which is more tightly 
constrained than either the Goldsmith or Lakoff proposals. Such reformulations help us 
to see how psycho-grammar diverges from grammar when computational constraints are 
taken into consideration. 
3 A Problem From Mohawk 
In Mohawk, an American Indian language, stress is placed on the penultimate syllable of a 
word. Since there are processes in Mohawk that add and delete vowels from words, their 
interaction with the stress rule is problematic. Figure 2 shows two Mohawk derivations 
in a standard generative account. 2 The first example shows us that vowel deletion must 
precede stress assignment. The penultimate vowel/a/in the underlying form does not 
appear in the surface form of the word. Instead stress is assigned to the preceding vowel, 
/o/, which is is the penultimate vowel in the surface form. The second example shows that 
stress assignment must precede vowel epenthesis (insertion), because the epenthetic /e/ that 
appears in the surface form is not counted when determining the penultimate vowel. Since 
the epenthetic /e/ is also the trigger for presonorant voicing in this example, we see that 
voicing must be ordered after vowel epenthesis. Together these two examples indicate the 
following rule ordering: Vowel deletion < Stress < Epenthesis < Pre-sonorant voicing. 
But this is a depth of four, and our model permits only two levels of derivation. We therefore 
must produce an alternative account of these four processes that requires fewer derivations. 
To do so, we rely on three features of the model: parallel rule application, multi-level 
representations, and a structuring primitive: syllabification. 
4 Representation of Syllable Structure 
Most insertion and deletion operations are syllabically-motivated (It6, 1989). By adding 
a syllabification mechanism to our model, we can replace certain derivational (string- 
rewriting) steps with more constrained and perhaps cognitively less taxing structuring 
steps. Linguists represent syllables as tree structures, as in the left portion of Figure 3. The 
nucleus of the syllable is normally a vowel. Any preceding consonants form the onset, and 
any following consonants the coda. The combined nucleus and coda make up the rime. In 
the middle portion of Figure 3 the syllabic structure of the English word tokens (phonetic 
transcription [tokenz]) is shown in this hierarchically structured form. The right portion 
shows how we encode the same information in our model using a set of onset, nucleus, 
2These examples, derived from Halle & Clements (1983), are cited in Lakoff (1989). We thank 
Marianne Mithun (p.c.) for correcting an error in the original data. 
Exploiting Syllable Structure in a Connectionist Phonology Model 615 
syllable 
onset nucleus coda 
ont: 
nucleus: 
Figure 3: Representations for syllable structure. 
M: hr oaht fi M: Xkhr ek ? 
onset: ++ + onset: ++ + 
nucleus: + + vowel del. nucleus: + + 
coda: + coda: + + 
stress (M-P) stress (M-P) 
P: hr 6 ht fi P: 2khr eke? 
h-del.; pre-son. pre-son. 
F: r 6 hdfi voicing (P-F) F: khr ege? voicing (P-F) 
Figure 4: Our solution to the Mohawk problem. 
epenthesis 
and coda bits, or ONC bits for short. We have no explicit representation for rimes, but this 
could be added if necessary. 
In Mohawk, the vowel deletion and epenthesis processes are both syllabically motivated. 
Vowel deletion enforces a constraint against branching nuclei. 3 Epenthesis inserts a vowel 
to break up a word-final consonant cluster (/k/ followed by glottal stop D/) that would be an 
illegal syllable coda. Our contention is that syllabification operates on the M-level string 
by setting the associated ONe bits in such a way that the P-level string will be syllabically 
well-formed. The ONe bits share control with the M-P rules of the mapping from M to P 
level. 
Every M-level segment must have one of its ONC bits set in order to be mapped to P-level. 
Thus, the syllabitier can cause a vowel to be deleted at P simply by failing to set its nucleus 
bit, as occurs for the/a/in/hroahtfi/in Figure 4. For the/khrek?/example, note in Figure 4 
that the/k/has been marked as an onset by the syllabitier and the/?/as a coda; there is 
no intervening nucleus. This automatically triggers an insertion by the M-P map, so that a 
vowel will appear between these two segments at P-level. The vowel chosen is the default 
or unmarked vowel for that particular language; for Mohawk it is/e/. For further details 
of the syllabification algorithm, see Touretzky & Wheeler (1990b). 
The left half of Figure 5 shows our formulation of the Mohawk stress rule, which assigns 
stress to the penultimate nucleus of a word. Rather than looking directly at the M-level 
buffer, the rule looks at the projection of the nucleus tier. By this we mean the M-level 
substring consisting of those segments whose nucleus bit is set. The # symbol indicates 
a word boundary. Since vowels deleted by the syllabitier have no nucleus bit set, and 
3This constraint is not shared by all languages. Furthermore, deletion is only one possible solution; 
another would be to insert a consonant or glide, such as/w/, to separate the vowels into different 
syllables. Each language makes its own choices about how constraint violations are to be repaired. 
616 Touretzky and Wheeler 
M[nucleus]: [ ] [ ] # P: [-s
