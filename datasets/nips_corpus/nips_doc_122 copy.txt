761 
Adaptive Neural Networks Using MOS Charge Storage 
D. B. Schwartz 1, R. E. Howard and W. E. Hubbard 
AT&T Bell Laboratories 
Crawfords Corner Rd. 
Holmdel, N.J. 07733 
Abstract 
MOS charge storage has been demonstrated as an effective method to store 
the weights in VLSI implementations of neural network models by several 
workers 2. However, to achieve the full power of a VLSI implementation of 
an adaptive algorithm, the learning operation must built into the circuit. We 
have fabricated and tested a circuit ideal for this purpose by connecting a 
pair of capacitors with a CCD like structure, allowing for variable size weight 
changes as well as a weight decay operation. A 2.5/ CMOS version achieves 
better than 10 bits of dynamic range in a 140/ x 350/ area. A 1.25/ chip 
based upon the same cell has 1104 weights on a 3.5ram x 6.0ram die and is 
capable of peak learning rates of at least 2 x 109 weight changes per second. 
I Adaptive Networks 
Much of the recent excitement about neural network models of computation has 
been driven by the prospect of new architectures for fine grained parallel compu- 
tation using analog VLSI. Adaptive systems are espescially good targets for analog 
VLSI because the adaptive process can compensate for the inaccuracy of individual 
devices as easily as for the variability of the signal. However, silicon VLSI does not 
provide us with an ideal solution for weight storage. Among the properties of an 
ideal storage technology for analog VLSI adaptive systems are: 
� The minimum available weight change Aw must be small. The simplest adap- 
tive algorithms optimize the weights by minimizing the output rror with a 
steepest descent search in weight space [1]. Iterative improvement algorithms 
such as steepest descent are based on the heuristic assumption of 'better' 
weights being found in the neighborhood of 'good' ones; a heuristic that fails 
when the granularity of the weights is not fine enough. In the worst case, the 
resolution required just to represent a function can grow exponentially in the 
dimension of the input space. 
� The weights must be able to represent both positive and negative values and 
the changes must be easily reversible. Frequently, the weights may cycle up 
and down while the adaptive process is converging and millions of incremental 
changes during a single training session is not unreasonable. If the weights 
cannot easily follow all of these changes, then the learning must be done off 
chip. 
1Now at GTE Laboratories, 40 Sylvan Rd., Waltham, Mass 02254 dbs(gte.com%relay. cs.net 
2For example, see the papers by Mann and Gilbert, Walker and Akers, and Murray et. al. in 
this proceedings 
762 Schwartz, Howard and Hubbard 
The parallelism of the network can be exploited to the fullest only if the 
mechanism controlling weight changes is simple enough to be reproduced at 
each weight. Ideally, the change is determined by some easily computed com- 
bination of information local to each weight and signals global to the entire 
system. This type of locality, which is as much a property of the algorithm as 
of the hardware, is necessary to keep the wiring cost associated with learning 
small. 
Weight decay, w  = cw with c < 1 is useful although not essential. Global 
decay of all the weights can be used to extend their dynamic range by rescaling 
when the average magnitude becomes toolarge. Decay of randomly chosen 
weights can be used both to control their magnitude [2] and to help gradient 
searches escape from local minima. 
To implement an analog storage cell with MOS VLSI the most obvious choices 
are non-volatile devices like floating gate and MNOS transistors, multiplying DAC's 
with conventional digital storage, and dynamic analog storage on MOS capacitors. 
Most non-volatile devices rely upon electron tunneling to change the amount of 
stored charge, typically requiring a large amount of circuitry to control weight 
changes. DAC's have already proven themselves in situations where 5 bits or less 
of resolution [3] [4] are sufficient, but higher resolution is prohibitively expensive in 
terms of area. We will show the disadvantage of MOS charge storage, its volatility, 
is more than outweighed by the resolution available and ease of making weight 
changes. 
Representation of both positive and negative weights can be obtained by storing 
the weights wi differentially on a pair of capacitors in which case 
Differential storage can be used to obtain some degree of rejection of leakage and 
can guarantee that leakage will reduce the magnitude of the weights as compared 
with a scheme where the weights are defined with respect to a fixed level, in which 
case as a weight decays it can change signs. A constant common mode voltage also 
eases the design constraints on the differential input multiplier used to read out the 
weights. An elegant way to manipulate the weights is to transfer charge from one 
capacitor to the other, keeping constant the total charge on the system and thus 
maximizing the dynamic range available from the readout circuit. 
2 Weight Changes 
Small packets of charge can easily be transferred from one capacitor to the other by 
exploiting charge injection, a phenomena carefully avoided by designers of switched 
capacitor circuits as a source of sampling error [5] [6] [7] [8] [9]. An example of a 
storage cell with the simplest configuration for a charge transfer system is shown 
in figure 1. A pair of MOS capacitors are connected by a string of narrow MOS 
transistors, a long one to transfer charge and two minimum length ones to isolate 
Adaptive Neural Networks Using MOS Charge Storage 763 
TA 
TP TC TM TA 
, I 
I 
TA TP TCP TI TCM TM TA 
I I 
I 
Figure 1: (a) The simplest storage cell, with provisions for only a single size incre- 
ment/decrement operations and no weight decay. (b) A more sophisticated cell with 
facilities for weight decay. By suitable manipulation of the clock signals, the two 
charge transfer transistors can be used to obtain different sizes of weight changes. 
Both circuits are initialized by turning on the access transistors TA and charging 
the capacitors up to a convenient voltage, typically VDD/2. 
the charge transfer transistor from the storage nodes. For the sake of discussion, we 
can treat the isolation transistors as ideal switches and concentrate on the charge 
transfer transistor that we here assume to be an n-channel device. To increase the 
weight ( See figure 1 ), the charge transfer transistor (TC) and isolation transistor 
attached to the positive storage node (TP) are turned on. When the system has 
reached electrostatic equilibrium the charge transfer transistor (TC) is disconnected 
from the plus storage node by turning off TP and connected to the minus storage 
node by turning on TM. If the charge transfer transistor TC is slowly turned off, the 
mobile charge in its channel will diffuse into the minus node, lowering its voltage. 
A detailed analysis of the charge transfer mechanism has been given elsewhere [10] 
but for the purpose of qualitative understanding of the circuit the inversion charge 
in the charge transfer transistor's channel can be approximated by 
= Co.(Ua - 
where VTE is the effective threshold voltage and Co the gate to channel capacitance 
of the charge transfer transistor. The effective threshold voltage is then given by 
where V'0 is the threshold voltage in the absence of body effect, qb! the fermi level, 
Vs the source to substrate voltage, and ? the usual body effect coefficient. An even 
764 Schwartz, Howard and Hubbard 
rougher model can be obtained by linearizing the body effect term [6] 
where Ce!! contains both the gate oxide capacitance and the effects of parasitic 
capacitance and r/= 7/2x/12qb!l. Within the linearized approximation, the change 
in voltage on a storage node with capacitance Csto,.e after n transfers is 
Vn = Vo + (V6 - VT -- r/Vo)(1 - exp(-an)) 
(1) 
with a = Ce!!/Csto,., and where V0 is the initial voltage on the storage node. Due 
to the dependence of the size of the transfer on the stored voltage, when the transfer 
direction is reversed the increment size changes unless the stored voltages on the 
capacitors are equal. This can be partially compensated for by using complementary 
pairs of p-channel and n-channel charge transfer transistors, in effect using a string 
of transmission gates to perform charge transfers. A weight decay operation can be 
introduced by using the more complex string of charge transfer transistors shown 
in figure lb. A weight decay is initiated by turning off the transistor in the middle 
of the string (TI) and turning on all the other transistors. When the two sides of 
the charge transfer string have equilibrated with their respective storage nodes, the 
connections to the storage nodes ( TM and TP ) are turned off and the two charge 
transfer transistors ( TCP and TCM ) are allowed to exchange charge by turning 
on the transistor, TI, which separates them. When two equal charge packets have 
been obtained TI is turned off again and the charge packets held by TCP and TCM 
are injected back into the storage capacitors. The resulting change in the stored 
weight is 
zxvdcay = (v+ - v_). 
Cox 
which corresponds to multiplying the weight by a constant a < 1 as desired. Besides 
allowing for weight decay, the more complex charge string shown in figure lb can also 
be used to obtain different size weight changes by using different clock sequences. 
3 Experimental Evaluation 
Test chips have been fabricated in both 1.25p and 2.5p CMOS, using the AT&T 
Twin Tub technology[11]. To evaluate the properties of an individual cell, especially 
the charge transfer mechanism, an isolated test structure consisting of five storage 
cells was built on one section of the 2.5p chip . The storage cells were differen- 
tially read out by two quadrant transconductance amplifiers whose input-output 
characteristics are
