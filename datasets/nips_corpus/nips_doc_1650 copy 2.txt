A Neuromorphic VLSI System for Modeling 
the Neural Control of Axial Locomotion 
Girish N. Patel 
giri sh @ ece. gatech.edu 
Edgar A. Brown 
ebrown @ ece. gatech.edu 
Stephen P. DeWeerth 
steved@ece.gatech.edu 
School of Electrical and Computer Engineering 
Georgia Institute of Technology 
Atlanta, Ga. 30332-0250 
Abstract 
We have developed and tested an analog/digital VLSI system that mod- 
els the coordination of biological segmental oscillators underlying axial 
locomotion in animals such as leeches and lampreys. In its current form 
the system consists of a chain of twelve pattern generating circuits that 
are capable of arbitrary contralateral inhibitory synaptic coupling. Each 
pattern generating circuit is implemented with two independent silicon 
Morris-Lecar neurons with a total of 32 programmable (floating-gate 
based) inhibitory synapses, and an asynchronous address-event inter- 
connection element that provides synaptic connectivity and implements 
axonal delay. We describe and analyze the data from a set of experi- 
ments exploring the system behavior in terms of synaptic coupling. 
1 Introduction 
In recent years, neuroscientists and modelers have made great strides towards illuminat- 
ing structure and computational properties in biological motor systems. For example, 
much progress has been made toward understanding the neural networks that elicit rhyth- 
mic motor behaviors, including leech heartbeat, crustacean stomatogastric mill and lam- 
prey swimming (a good review on these is in [1] and [2]). It is thought that these same 
mechanisms form the basis for more complex motor behaviors. The neural substrate for 
these control mechanisms are called central pattern generators (CPG). In the case of loco- 
motion these circuits are distributed along the body (in the spinal cord of vertebrates or in 
the ganglia of invertebrates) and are richly interactive with sensory input and descending 
connections from the brain, giving rise to a highly distributed system as shown in 
Figure 1. In cases in which axial locomotion is involved, such as leech and lamprey 
swimming, synaptic interconnection patterns among autonomous segmental oscillators 
along the animal's axis produce coordinated motor patterns. These intersegmental coordi- 
nation architectures have been well studied through both physiological experimentation 
and mathematical modeling. In addition, undulatory gaits in snakes have also been stud- 
ied from a robotics perspective [3]. However, a thorough understanding of the computa- 
tional principles in these systems is still lacking. 
A Neuromorphic System for Modeling Axial Locomotion 725 
Muscle 
Muscle 
T 
I 
I 
I 
__ 
Figure 1: Neuroanatomy of segmented animals. 
In order to better understand the computational paradigms that mediate intersegmental 
coordination and the resulting neural control of axial locomotion (and other motor pat- 
terns), we are using neuromorphic very large-scale integrated (VLSI) circuits to develop 
models of these biological systems. The goals in our research are (i) to study how the 
properties of individual neurons in a network affect the overall system behavior; (ii) to 
facilitate the validation of the principles underlying intersegmental coordination; and (iii) 
to develop a real-time, low power, motion control system. We want to exploit these prin- 
ciples and architectures both to improve our understanding of the biology and to design 
artificial systems that perform autonomously in various environments. 
Parameter Input 
GUI ] 
Address-Event Communication Network 
Event x / 
Output 12 $eg*ment$ 
Figure 2: Block-level diagram of the implemented system. The intersegmental 
communications network facilitates communication among the intrasegmental units with 
pipelined stages. 
In this paper, we present a VLSI model of intersegmental coordination as shown in 
Figure 2. Each segment in our system is implemented with a custom IC containing a CPG 
consisting of two silicon model neurons, each one with 16 inhibitory synapses whose val- 
ues are stored on chip and are continuously variable; an asynchronous address event com- 
munications IC that implements the queuing and delaying of events providing synaptic 
connectivity and thus simulating axonal properties; and a microcontroller (with internal 
A/D converter and timer) that facilitates the modification of individual parameters 
through a serial bus. The entire system consists of twelve such segments linked to a com- 
puter on which a graphical user interface (GUI) is implemented. By using the GUI, we 
are able to control all of the synaptic connections in the system and to measure the result- 
726 G. N. Patel, E. A. Brown and $. P DeWeerth 
ing neural outputs. We present the system model, and we investigate the role of synaptic 
coupling in the establishment of phase lags along this chain of neural oscillators. 
2 Pattern generating circuits 
The smallest neural system capable of generating the basic alternating activity that char- 
acterizes the swimming CPGs is the half-center oscillator, essentially two bursting neu- 
rons with reciprocally inhibitory connections [1] as shown in Figure 3a. In biological 
systems, the associated neurons have both slow and fast time constants to facilitate the 
fast spiking (action potentials) and the slower bursting oscillations that control the elic- 
ited movements as shown in Figure 3b. To simplify the parameter space of our system, 
we use reduced two-state silicon neurons [4]. The output of each silicon neuron is an 
oscillation that represents the envelope of the bursting activity (i.e. the spiking activity 
and corresponding fast time constants are eliminated) as shown in Figure 3c. Each neu- 
ron also has 16 analog synapses that receive off-chip input. The synaptic parameters are 
stored in an array of floating-gate transistors [5] that provide nonvolatile analog memory. 
CPG 
B 
c 
1 
Figure 3: Half-center oscillator and the generation of events in spiking and nonspiking 
silicon neurons. Events are generated by detecting rapid rises in the membrane potential of 
spiking neurons or by detecting rapid rises and falls in nonspiking neurons. 
3 Intersegmental communication 
Our segmented system consists of an array of CPG circuits interconnected via an commu- 
nication network that implements an asynchronous, address-event protocol [6][7]. Each 
CPG is connected to one node of this address-event intersegmental communication sys- 
tem as illustrated in Figure 2. This application-specific architecture uses a pipelined 
broadcast scheme that is based upon its biological counterpart. The principal advantage of 
using this custom scheme is that requisite addresses and delays are generated implicitly 
based upon the system architecture. In particular the system implements distance-depen- 
dent delays and relative addressing. The delays, which are thought to be integral to the 
network computation, replicate the axonal delays that result as action potentials propa- 
gate down an animal's body [2]. The relative addressing greatly simplifies the implemen- 
tation of synaptic spread [8], the hypothesized translational invariance in the 
intersegmental connectivity in biological axial locomotion systems. Thus, we can set the 
synaptic parameters identically at every segment, greatly reducing system complexity. 
In this architecture (which is described in more depth in [4]), each event is passed from 
segment to neighboring segment bidirectionally down the length of the one-dimensional 
A Neuromorphic System for Modeling Axial Locomotion 72 7 
communications network. By delaying each event at every segment, the pipeline architec- 
ture facilitates the creation of distance-dependent delays. The other primary advantage of 
this architecture is that it can easily generate a relative addressing scheme. Figure 4 illus- 
trates the event-passing architecture with respect to the relative addressing and distance- 
dependent delays. Each event, generated at a particular node (the center node, in this 
example), is transmitted bidirectionally down the length of the network. It is delayed by 
time AT at each segment, not including the initiating segment. 
t = t0+2AT t = t0+AT t = t0+AT t = t0+2AT 
Figure 4: Relative addressing and distance-dependent delays. 
The events are generated by the neurons in each segment. Because these are not spiking 
neurons, we could not use the typical scheme of generating one event per action poten- 
tial. Instead, we generate one event at the beginning and end of each burst (as illustrated 
in Figure 3) and designate the individual events as rising or falling. In each segment the 
events are stored in a queue (Figure 5), which implements delay based upon uniform con- 
duction velocities. As an event arrives at each new segment, it is time stamped, its rela- 
tive address is incremented (or decremented), and then it is stored in the queue for the 
A T interval. As the event exits the queue, its data is decoded by the intrasegmental units, 
and synaptic inputs are applied to the appropriate intrasegmental neurons. 
ovonts from ovonts from 
rostral segment intrasegmental unit 
(closer to head) [ l tlror ï¿½ 
(event storage stral and 
-- and processing) caudal segments 
events from and intrasegmental 
caudal segment 
(closer to tail) unit 
Figure 5: Block-level diagram of a communications node illustrating how events enter 
and exit each stage of the pipeline. 
4 Experiments and Discussion 
We have implemented the complete system shown in Figure 2, and have performed a 
number of experiments on the system. In Figure 6, we show the behaviors the system 
exhibits when it is configured with asymmetrical nearest-neighbor connections. The sys- 
tem displays traveling waves whose directions depend on the direction of the dominant 
coupling. Note that the intersegmental phase lags vary for different swim frequencies. 
One important set of experiments focussed on the 
