A Cortico-Cerebellar Model that Learns to 
Generate Distributed Motor Commands to 
Control a Kinematic Arm 
N.E. Bertbier S.P. Singh A.CI. Barto 
Department of Computer Science 
University of Massachusetts 
Amherst, MA 01002 
J.C. Houk 
Department of Physiology 
Northwestern University Medical School 
Chicago, IL 60611 
Abstract 
A neurophysiologica]ly-based model is presented that controls a simulated 
kinematic arm during goal-directed reaches. The network generates a 
quasi-feedforward motor command that is learned using training signals 
generated by corrective movements. For each target, the network selects 
and sets the output of a subset of pattern generators. During the move- 
ment, feedback from proprioceptors turns off the pattern generators. The 
task facing individual pattern generators is to recognize when the arm 
reaches the target and to turn off. A distributed representation of the mo- 
tor command that resembles population vectors seen in io was produced 
naturally by these simulations. 
1 INTRODUCTION 
We have recently begun to explore the properties of sensorimotor networks with 
architectures inspired by the anatomy and physiology of the cerebellum and its in- 
terconnections with the red nucleus and the motor cortex (Houk 1989; Houk et al., 
611 
612 Berthier, Singh, Barto, and Houk 
1990). It is widely accepted that these brain regions are important in the control 
of limb movements (Kuypers, 1981; Ito, 1984), although relatively little attention 
has been devoted to probing how the different regions might function together in 
a cooperative manner. Starting from a foundation of known anatomical circuitry 
and the results of microelectrode recordings from neurons in these circuits, we pro- 
posed the concept of rubrocerebellar and corticocerebellar information processing 
modules that are arranged in parasagittal arrays and function as adjustable pattern 
generators (APGs) capable of the storage, recall and execution of motor programs. 
The aim of the present paper is to extend the APG Mode] to a multiple degree- 
of-freedom task and to investigate how the motor representation developed by the 
mode] compares to the population vector representations seen by Georgopoulos 
and coworkers (e.g., Georopoulos, 1988). A complete description of the model and 
simulations reported here is contained in Betthief et al. (1991). 
2 THE APG ARRAY MODEL 
As shown in Figure 1 the model has three parts: a neural network that generates 
control signals, a muscle model that controls joint angle, and a planar, kinematic 
arm. The control network is an array of APGs that generate signals that are 
fed to the limb musculature. Because here we are interested in the basic issue of 
how a collection of APGs might cooperative]y control multiple degree-of-freedom 
movements, we use a very simplified model of the limb that ignores dynamics. The 
muscles convert APG activity to changes in muscle length, which determine the 
changes in the joint angles. Activation of an APG causes movement of the arm in 
a direction in joint-angle space that is specific to that APG l, and the magnitude 
of an APG's activity determines the velocity of that movement. The simultaneous 
activation of selected APGs determines the arm trajectory as the superposition of 
these movements. A learning rule, based on long-term depression (e.g., Ito, 1984), 
adjusts the subsets of APGs that are selected as well as characteristics of their 
activity in order to achieve desired movements. 
Each APG consists of a positive feedback loop and a set of Purkinje cells (PCs). 
The positive feedback loop is a highly simplified model of a component of a complex 
cerebrocerebellar recurrent network. In the simplified model simulated here, each 
APG has its own feedback loop, and the loops associated with different APGs do 
not interact. When triggered by sufficiently strong activation, the neurons in these 
loops fire repetitively in a self-sustaining manner. An APG's motor command is 
generated through the action of its PCs which inhibit and modulate the buildup of 
activity in the feedback loop. The activity of loop cells is conveyed to spinal motor 
areas by rubrospinal fibers. PCs receive information that specifies and constrains 
the desired movements via parallel fibers. 
We hypothesize that the response of PCs to particular parallel fiber inputs is adap- 
tively adjusted through the influence of climbing fibers that respond to corrective 
movements (Houk & Barto, 1991). The APG array model assumes that climbing 
fibers and PCs are aligned in a way that climbing fibers provide specialized infor- 
To simplify these initial simulations we ignore changes in muscle moment arms with 
posture of the arm. 
A Cortico-Cerebellar Model that Learns to Generate Distributed Motor Commands 613 
Network 
APG Modules 
m 
M 
Muscles 
T 
Figure 1: APG Control of Joint Angles. A collection of of APGs (adjustable pattern 
generators) is connected to a simulated two degree-of-freedom, kinematic, planar 
arm with antagonistic muscles at each joint. The task is to move the arm in the 
plane from a central starting location to one of eight symmetrically placed targets. 
Activation of an APG causes a movement of the arm that is specific to that APG, 
and the magnitude of an APG's activity determines the velocity of that movement. 
The simultaneous activation of selected APGs determines the arm trajectory as a 
superposition of these movements. 
mation to PCs. Gel]man et al. (1985) showed that proprioceptive climbing fibers 
are inhibited during planned movements, but the data of Gilbert and Thach (1977) 
suggest that they fire during corrective movements. In the present simulations, we 
assume that corrective movements are made when a movement fails to reach the 
target. These corrective movements stimulate proprioceptive climbing fibers which 
provides information to higher centers about the direction of the corrective move- 
ment. More detailed descriptions of APGs and relevant anatomy and physiology 
can be found in Houk (1989), Houk et al. (1990), and Betthief et al. (1991). 
The generation of motor commands occurs in three phases. In the first phase, we 
assume that all positive feedback loops are off, and inputs provided by teleceptive 
and proprioceptive parallel fibers and basket cells determine the outputs of the PCs. 
We call this first phase selection. We assume that noise is present during the selec- 
tion process so that individual PCs are turned off (i.e., selected) probabilistically. 
To begin the second phase, called the execution phase, loop activity is triggered by 
cortical activity. Once triggered, loop activity is self-sustaining because the loop 
cells have reciprocal positive connections. The triggering of loop activity causes the 
motor command to be read out. The states of the PCs in the selection phase 
determine the speed and direction of the arm movement. As the movement is be- 
ing performed, proprioceptive feedback and efference copy gradually depolarize the 
PCs. When a large proportion of the PCs are depolarized, PC inhibition reaches a 
critical value and terminates bop activity. In the third phase, the correction phase, 
corrective movements trigger climbing fiber activity that alters parallel fiber-PC 
connection weights. 
614 Berthier, Singh, Barto, and Houk 
A 
B 
Figure 2: A. Movement Trajectories After Training. The starting point for ech 
movement is the center of the workspace, and the target location is the center of 
the open square. The position of the arm at each time step is shown as a dot. 
Three movements are shown to each target. B. APG selection. APG selection for 
movements to a given target is illustrated by a vector plot at the position of the 
target. An individual APG is represented by a vector, the direction of which is 
equal to the direction of movement caused by that APG in Cartesian space. The 
vector length is proportional to output of the Purkinje cells during the selection 
phase. The arrow points in the direction of the vector sum. 
3 SIMULATIONS 
We trained the APG model to control a two degree-of-freedom, kinematic, planar 
arm. The task was similar to Georgopoulos (1988) and required APGs to move the 
arm from a central starting point to one of eight radially symmetric, equidistant 
targets. Each simulated trial started by placing the endpoint of the arm in the cen- 
tral starting location. The selection, execution, and correction phases of operation 
were then simulated. The task facing each of the selected APGs was to turn off at 
the proper time so that the movement stopped at the target. 
Simulations showed that the model could learn to control movements to the eight 
targets. Training typically required about 700 trials per target until the arm end- 
point was consistently moved to within I cm of the target. Figure 2 shows sample 
trajectories and population vectors of APG activity. Performance never resulted 
in precise movements due to the probabilistic nature of selection. Movement tra- 
jectories tended to follow straight lines in joint-angle space and were thus slightly 
curved lines in the workspace. About half of the APGs in the model were used 
to move to an individual target with population vectors similar to those seen by 
Georgopoulos (1988). The number of APGs used for each target was dependent 
on the sharpness of the climbing fiber receptive fields, with cardioid shaped recep- 
tive fields in joint-angle space giving population vectors that most resembled those 
experimentally observed. 
A Cortico-Cerebellar Model that Learns to Generate Distributed Motor Commands 615 
4 ANALYSIS 
In order to understand how the model worked we undertook a theoretical analysis of 
its simulated behavior. Analysis indicated that the expected trajectory of a move- 
ment was a straight line in joint-angle space from the starting position to the target. 
This is a special case of a mathematical result by 
